{"version":3,"sources":["components/Tetris.module.css","components/UI/Modal.module.css","components/UI/Display.module.css","components/Next.module.css","utils/constants.tsx","utils/tetriminos.tsx","utils/functions.tsx","components/Stage.tsx","components/UI/Display.tsx","hooks/useStage.tsx","hooks/usePlayer.tsx","hooks/useGame.tsx","components/Next.tsx","components/UI/Modal.tsx","components/GameOverPage.tsx","components/Tetris.tsx","App.tsx","index.tsx"],"names":["module","exports","data","COLS","ROWS","BLOCK_SIZE","BG_COLOR","emptyStage","Array","from","length","fill","POINTS","SINGLE","DOUBLE","TRIPLE","TETRIS","SOFT_DROP","HARD_DROP","NONE","LEVEL","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","TETRIMINOS","L","shape","color","I","J","O","S","T","Z","randomTetri","Object","keys","Math","floor","random","rotate","p","newP","y","x","forEach","row","reverse","isValid","playerState","stage","posX","posY","some","element","drawSquare","ctx","beginPath","fillStyle","fillRect","Stage","stageState","className","gameState","canvasRef","useRef","isGameOver","useEffect","canvas","current","getContext","width","height","scale","clearRect","pos_x","pos_y","every","e","ref","Display","props","classes","score","title","value","useStage","useState","setStage","newStage","JSON","parse","stringify","cell","arr","clearedRows","newArr","ele","push","unshift","clearRows","newState","createNewPlayer","type","isCollided","dropType","next","reducer","prevState","action","newPlayer","payload","usePlayer","useReducer","dispatchPlayer","id","isPause","setInterval","level","clearInterval","initialState","lines","useGame","dispatchGame","flooredLines","Next","nextShape","Backdrop","backdrop","onClick","onClose","ModalOverlay","modal","content","children","portalElement","document","getElementById","Modal","ReactDOM","createPortal","GameOverPage","closeModal","reStart","Tetris","openModal","setOpenModal","renewStage","clearStage","addScore","startGameHandler","event","preventDefault","closeModalHandler","container","onKeyDown","code","tabIndex","grid","board","aside","App","render","StrictMode"],"mappings":"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","file":"static/js/main.175f69bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tetris_container__20ep0\",\"grid\":\"Tetris_grid__yl3dw\",\"board\":\"Tetris_board__3uyNg\",\"aside\":\"Tetris_aside__2s9F8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1mfF6\",\"modal\":\"Modal_modal__4DXUe\",\"slide-down\":\"Modal_slide-down__W3MdX\",\"content\":\"Modal_content__3zUnK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"score\":\"Display_score__2OzJG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"next\":\"Next_next__2f2ey\"};","import type {StageState} from './types';\n\nconst data = {\n  COLS: 10,\n  ROWS: 20,\n  BLOCK_SIZE: 30,\n  BG_COLOR: `rgba(104, 66, 126, 0.4)`,\n};\nexport default data;\n\nexport const emptyStage: StageState = Array.from({ length: data.ROWS }, () =>\n  Array(data.COLS).fill(0)\n);\n\nexport const POINTS = {\n  SINGLE: 100,\n  DOUBLE: 300,\n  TRIPLE: 500,\n  TETRIS: 800,\n  SOFT_DROP: 1,\n  HARD_DROP: 2,\n  NONE: 0,\n};\n\ntype levelType = {[k:number]:number}\n\nexport const LEVEL:levelType = {\n  \n  1: 800,\n  2: 720,\n  3: 630,\n  4: 550,\n  5: 470,\n  6: 380,\n  7: 300,\n  8: 220,\n  9: 130,\n  10: 100,\n  11: 80,\n  12: 80,\n  13: 80,\n  14: 70,\n  15: 70,\n  16: 70,\n  17: 50,\n  18: 50,\n  19: 50,\n  20: 30,\n  // 29+ is 20ms\n};\n\n\n","import type { Tetrimino } from \"./types\";\n\ntype tetriObj = {\n  [key in Tetrimino]: {\n    shape: (0 | Tetrimino)[][];\n    color: string;\n  };\n};\n\nexport const TETRIMINOS: tetriObj = {\n  L: {\n    shape: [\n      [\"L\", 0],\n      [\"L\", 0],\n      [\"L\", \"L\"],\n    ],\n    color: \"#3d84b8\",\n  },\n  I: {\n    shape: [[\"I\", \"I\", \"I\", \"I\"]],\n    color: \"#e25822\",\n  },\n  J: {\n    shape: [\n      [0, \"J\"],\n      [0, \"J\"],\n      [\"J\", \"J\"],\n    ],\n    color: \"#006a71\",\n  },\n  O: {\n    shape: [\n      [\"O\", \"O\"],\n      [\"O\", \"O\"],\n    ],\n    color: \"#f1bc31\",\n  },\n  S: {\n    shape: [\n      [0, \"S\", \"S\"],\n      [\"S\", \"S\", 0],\n    ],\n    color: \"#a9294f\",\n  },\n  T: {\n    shape: [\n      [\"T\", \"T\", \"T\"],\n      [0, \"T\", 0],\n    ],\n    color: \"#ad62aa\",\n  },\n  Z: {\n    shape: [\n      [\"Z\", \"Z\", 0],\n      [0, \"Z\", \"Z\"],\n    ],\n    color: \"#206a5d\",\n  },\n};\n","import type { Player, Tetrimino, StageState } from \"./types\";\nimport { TETRIMINOS } from \"./tetriminos\";\nimport data from \"./constants\";\n\nexport function randomTetri(): Tetrimino {\n  const lst = Object.keys(TETRIMINOS) as Array<Tetrimino>;\n  return lst[Math.floor(Math.random() * 7)];\n}\n\nexport function rotate(p: (0 | Tetrimino)[][]) {\n  // Transpose matrix, p is the Piece\n  const newP = Array.from({ length: p[0].length }, () =>\n    Array(p.length).fill(0)\n  );\n\n  for (let y = 0; y < p.length; y++) {\n    for (let x = 0; x < p[0].length; x++) {\n      newP[x][y] = p[y][x];\n    }\n  }\n\n  // Reverse the order of the columns.\n  newP.forEach((row) => row.reverse());\n  return newP;\n}\n\nexport function isValid(playerState: Player, stage: StageState) {\n  const { x: posX, y: posY, shape } = playerState;\n\n  if (posX < 0 || posX + shape[0].length > data.COLS) {\n    return false;\n  } else if (posY + shape.length > data.ROWS) {\n    return false;\n  } else if (\n    //check collision\n    shape.some((row, y) =>\n      row.some(\n        (element, x) =>\n          posY + y >= 0 && element !== 0 && stage[posY + y][posX + x] !== 0\n      )\n    )\n  ) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nexport const clearRows = (arr: StageState) => {\n  let clearedRows = 0;\n  const newArr: StageState = [];\n\n  // setTimeout(() => {\n    arr.forEach((row, y) => {\n      if (!row.some((ele) => ele === 0)) {\n        clearedRows++;\n        newArr.unshift(Array(data.COLS).fill(0));\n      } else {\n        newArr.push(row);\n      }\n    });\n  // }, 1000);\n  return [newArr, clearedRows] as const;\n};\n\nexport function drawSquare(\n  color: string | 0,\n  x: number,\n  y: number,\n  ctx: CanvasRenderingContext2D\n) {\n  if (color !== 0) {\n    ctx.beginPath();\n    ctx.fillStyle = color;\n    ctx.fillRect(x, y, 1, 1);\n  }\n}\n","import { useRef, useEffect } from \"react\";\nimport data from \"../utils/constants\";\nimport { TETRIMINOS } from \"../utils/tetriminos\";\nimport type { StageState, Player, GameState } from \"../utils/types\";\nimport { drawSquare } from \"../utils/functions\";\n\nconst COLS = data.COLS;\nconst ROWS = data.ROWS;\nconst BLOCK_SIZE = data.BLOCK_SIZE;\n\n// window.requestAnimFrame = (function () {\n//   return (\n//     window.requestAnimationFrame ||\n//     window.webkitRequestAnimationFrame ||\n//     window.mozRequestAnimationFrame ||\n//     function (callback) {\n//       window.setTimeout(callback, 1000 / 60);\n//     }\n//   );\n// })();\n\nconst Stage: React.FC<{\n  className: string;\n  stageState: StageState;\n  playerState: Player;\n  gameState: GameState;\n}> = ({ playerState, stageState, className, gameState }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const isGameOver = gameState.isGameOver;\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas!.getContext(\"2d\");\n\n    // Calculate size of canvas from constants.\n    ctx!.canvas.width = COLS * BLOCK_SIZE;\n    ctx!.canvas.height = ROWS * BLOCK_SIZE;\n\n    // Scale blockss\n    ctx!.scale(BLOCK_SIZE, BLOCK_SIZE);\n\n    //clear State\n    ctx!.clearRect(0, 0, canvas!.width, canvas!.height);\n    ctx!.beginPath();\n\n    if (!isGameOver) {\n      //draw stage\n      stageState.forEach((row, y) =>\n        row.forEach((element, x) => {\n          if (element !== 0) {\n            const color = TETRIMINOS[element].color;\n            drawSquare(color, x, y, ctx!);\n          }\n        })\n      );\n\n      //draw player\n\n      const { shape, color, x: pos_x, y: pos_y } = playerState;\n      if (stageState[0].every((e) => e === 0)) {\n        shape.forEach((row, y) =>\n          row.forEach((element, x) => {\n            if (\n              element !== 0 &&\n              pos_y + y >= 0 &&\n              stageState[pos_y + y][pos_x + x] === 0\n            ) {\n              drawSquare(color, pos_x + x, pos_y + y, ctx!);\n            }\n          })\n        );\n      }\n    }\n  }, [stageState, playerState, isGameOver]);\n\n  return <canvas ref={canvasRef} className={className} />;\n};\n\nexport default Stage;\n","import classes from \"./Display.module.css\";\nimport React from \"react\"\n\n\nconst Display:React.FC<{title:string, value:number | null}> = (props) => {\n    return <div className={classes.score}>{props.title}: <span>{props.value}\n        </span></div>\n};\n\nexport default Display;","import { useState } from \"react\";\nimport { emptyStage } from \"../utils/constants\";\nimport { clearRows } from \"../utils/functions\";\nimport type { Player, StageState } from \"../utils/types\";\n\nconst useStage = () => {\n  const [stageState, setStage] = useState(emptyStage);\n\n\n  const renewStage = (playerState: Player) => {\n      const newStage: StageState = JSON.parse(JSON.stringify(stageState));\n      playerState.shape.forEach((row, y) => {\n        if (playerState.y + y >= 0) {\n          row.forEach((cell, x) => {\n            if (cell !== 0) {\n              newStage[playerState.y + y][playerState.x + x] = cell;\n            }\n          });\n        }\n      });\n    const [newState, clearedRows] = clearRows(newStage);\n    setStage(() => newState);\n    return clearedRows;\n  };\n\n  const clearStage = () => {\n    setStage(() => {\n      return emptyStage;\n    });\n  };\n\n  return [stageState, renewStage, clearStage] as const;\n};\n\nexport default useStage;\n","import { useReducer, useEffect } from \"react\";\nimport { TETRIMINOS } from \"../utils/tetriminos\";\nimport { LEVEL } from \"../utils/constants\";\nimport type { Player, Tetrimino, StageState, GameState } from \"../utils/types\";\nimport { randomTetri, rotate, isValid } from \"../utils/functions\";\n\nfunction createNewPlayer(type: Tetrimino = \"L\"): Player {\n  const shape = TETRIMINOS[type].shape;\n  const color = TETRIMINOS[type].color;\n  return {\n    x: 4,\n    y: 0,\n    shape: shape,\n    color: color,\n    isCollided: false,\n    dropType: \"NONE\",\n    next: randomTetri(),\n  };\n}\n\nfunction reducer(\n  prevState: Player,\n  action: { type: string; payload?: StageState }\n): Player {\n  switch (action.type) {\n    case \"Reset\": {\n      //get next player\n      const newPlayer = createNewPlayer(prevState.next)\n\n      //assign the former next player to new player\n      return newPlayer;\n    }\n    case \"ArrowDown\": {\n      const newPlayer = {\n        ...prevState,\n        y: prevState.y + 1,\n      };\n      if (isValid(newPlayer, action.payload!)) {\n        return newPlayer;\n      } else {\n        return {\n          ...prevState,\n          dropType: \"SOFT_DROP\",\n          isCollided: true,\n        };\n      }\n    }\n    case \"ArrowLeft\": {\n      const newPlayer = {\n        ...prevState,\n        x: prevState.x - 1,\n      };\n      if (isValid(newPlayer, action.payload!)) {\n        return newPlayer;\n      } else {\n        return prevState;\n      }\n    }\n    case \"ArrowRight\": {\n      const newPlayer = {\n        ...prevState,\n        x: prevState.x + 1,\n      };\n      if (isValid(newPlayer, action.payload!)) {\n        return newPlayer;\n      } else {\n        return prevState;\n      }\n    }\n    case \"ArrowUp\": {\n      const newPlayer = {\n        ...prevState,\n        shape: rotate(prevState.shape),\n      };\n      if (isValid(newPlayer, action.payload!)) {\n        return newPlayer;\n      } else {\n        return prevState;\n      }\n    }\n    case \"Space\": {\n      let newPlayer = prevState;\n      while (isValid(newPlayer, action.payload!)) {\n        newPlayer = {\n          ...newPlayer,\n          y: newPlayer.y + 1,\n        };\n      }\n      return {\n        ...newPlayer,\n        y: newPlayer.y - 1,\n        isCollided: true,\n        dropType: \"HARD_DROP\",\n      };\n    }\n    default:\n      return prevState;\n  }\n}\n\nconst usePlayer = (stageState: StageState, gameState: GameState) => {\n  const [playerState, dispatchPlayer] = useReducer(reducer, createNewPlayer());\n\n  useEffect(() => {\n    let id: NodeJS.Timeout;\n    if (!gameState.isGameOver && !gameState.isPause) {\n      id = setInterval(\n        () => dispatchPlayer({ type: \"ArrowDown\", payload: stageState }),\n        LEVEL[gameState.level]\n      );\n    }\n    return () => {\n      clearInterval(id);\n    };\n  }, [playerState, gameState, stageState]);\n\n  return [playerState, dispatchPlayer] as const;\n};\n\nexport default usePlayer;\n","import { useEffect, useReducer } from \"react\";\nimport type { GameState } from \"../utils/types\";\n\nconst initialState: GameState = {\n  score: 0,\n  level: 1,\n  lines: 0,\n  isGameOver: true,\n  isPause: false,\n};\n\ntype ActionType =\n  | \"ResetGame\"\n  | \"SetGameOver\"\n  | \"TogglePause\"\n  | \"AddLines\"\n  | \"ChangeScore\"\n  | \"ChangeLevel\";\n\nfunction reducer(\n  prevState: GameState,\n  action: { type: ActionType; payload?: number }\n): GameState {\n  switch (action.type) {\n    case \"ResetGame\": {\n      return {\n        ...initialState,\n        isGameOver: false,\n      };\n    }\n    case \"SetGameOver\": {\n      return {\n        ...prevState,\n        isGameOver: true,\n      };\n    }\n    case \"TogglePause\": {\n      return {\n        ...prevState,\n        isPause: !prevState.isPause,\n      };\n    }\n    case \"AddLines\": {\n      return {\n        ...prevState,\n        lines: prevState.lines + action.payload!,\n      };\n    }\n    case \"ChangeScore\": {\n      return {\n        ...prevState,\n        score: prevState.score + action.payload!,\n      };\n    }\n    case \"ChangeLevel\": {\n      let level = prevState.level + action.payload!;\n      if (level < 1) {\n        level = 1;\n      } else if (level > 10) {\n        level = 10;\n      } \n      return {\n        ...prevState,\n        level: level,\n      };\n    }\n    default:\n      return prevState;\n  }\n}\n\nconst useGame = () => {\n  const [gameState, dispatchGame] = useReducer(reducer, initialState);\n\n  const flooredLines = Math.floor(gameState.lines / 3);\n  useEffect(() => {\n    dispatchGame({ type: \"ChangeLevel\", payload: 1 });\n  }, [flooredLines, dispatchGame]);\n\n  return [gameState, dispatchGame] as const;\n};\n\nexport default useGame;\n","import React, { useEffect, useRef } from \"react\";\nimport { drawSquare } from \"../utils/functions\";\nimport { GameState, Player } from \"../utils/types\";\nimport { TETRIMINOS } from \"../utils/tetriminos\";\nimport data from \"../utils/constants\";\nimport classes from \"./Next.module.css\";\n\nconst Next: React.FC<{\n  playerState: Player;\n  gameState: GameState;\n}> = ({ playerState, gameState }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    if (!gameState.isGameOver) {\n      const canvas = canvasRef.current;\n      const ctx = canvas!.getContext(\"2d\");\n\n      const nextShape = TETRIMINOS[playerState.next].shape;\n      const color = TETRIMINOS[playerState.next].color;\n\n      const BLOCK_SIZE = data.BLOCK_SIZE;\n      ctx!.canvas.width = nextShape[0].length * BLOCK_SIZE;\n      ctx!.canvas.height = nextShape.length * BLOCK_SIZE;\n\n      ctx!.scale(BLOCK_SIZE, BLOCK_SIZE);\n\n      //clear State\n      ctx!.clearRect(0, 0, canvas!.width, canvas!.height);\n      ctx!.beginPath();\n\n      nextShape.forEach((row, y) =>\n        row.forEach((element, x) => {\n          if (element !== 0) {\n            drawSquare(color, x, y, ctx!);\n          }\n        })\n      );\n    }\n  }, [playerState, gameState.isGameOver]);\n\n  return <canvas ref={canvasRef} className={classes.next}/>;\n};\nexport default Next;\n","import { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport classes from \"./Modal.module.css\";\n\nconst Backdrop: React.FC<{ onClose: (event: React.MouseEvent) => void }> = (\n  props\n) => {\n  return <div className={classes.backdrop} onClick={props.onClose} />;\n};\n\nconst ModalOverlay: React.FC = (props) => {\n  return (\n    <div className={classes.modal}>\n      <div className={classes.content}>{props.children}</div>\n    </div>\n  );\n};\n\nconst portalElement = document.getElementById(\"overLay\") as HTMLElement;\n\nconst Modal: React.FC<{ onClose: (event: React.MouseEvent) => void }> = (\n  props\n) => {\n  return (\n    <Fragment>\n      {ReactDOM.createPortal(\n        <Backdrop onClose={props.onClose} />,\n        portalElement\n      )}\n      {ReactDOM.createPortal(\n        <ModalOverlay>{props.children}</ModalOverlay>,\n        portalElement\n      )}\n    </Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport Form from './UI/Form';\nimport Modal from './UI/Modal';\n\nconst GameOverPage: React.FC<{\n  score: number;\n  reStart: (event: React.MouseEvent) => void;\n  closeModal: (event: React.MouseEvent) => void;\n}> = (props) => {\n  return (\n    <Modal onClose={props.closeModal}>\n      <h1>Game Over!</h1>\n      <h2>score: {props.score}</h2>\n\n      <button onClick={props.reStart}>Restart</button>\n    </Modal>\n  );\n};\n\nexport default GameOverPage;","import {useState} from 'react';\n\nimport Stage from \"./Stage\";\nimport classes from \"./Tetris.module.css\";\nimport Display from \"./UI/Display\";\nimport { POINTS } from \"../utils/constants\";\n\n//import hooks\nimport useStage from \"../hooks/useStage\";\nimport usePlayer from \"../hooks/usePlayer\";\nimport useGame from \"../hooks/useGame\";\nimport React, { Fragment, useEffect } from \"react\";\nimport Next from \"./Next\";\nimport GameOverPage from \"./GameOverPage\";\n\nconst Tetris = () => {\n  const [openModal, setOpenModal] = useState(false)\n  const [stageState, renewStage, clearStage] = useStage();\n  const [gameState, dispatchGame] = useGame();\n  const [playerState, dispatchPlayer] = usePlayer(stageState, gameState);\n\n  //check GameOver\n  const isGameOver = stageState[0].some(element=>element !== 0)\n  useEffect(()=>{\n    if (isGameOver) {\n      dispatchGame({type: 'SetGameOver'})\n      setOpenModal(true);\n    }\n  },[dispatchGame, isGameOver])\n  \n  useEffect(() => {\n    if (!isGameOver && playerState.isCollided) {\n\n      //update stage && update line\n      const clearedRows = renewStage(playerState);\n      dispatchGame({ type: \"AddLines\", payload: clearedRows });\n\n      //update score: 1. drop score\n      dispatchGame({\n        type: \"ChangeScore\",\n        payload: POINTS[playerState.dropType],\n      });\n\n      //update score: 2. clear line score\n      let addScore = POINTS.NONE;\n      if (clearedRows > 3) {\n        addScore = POINTS.TETRIS;\n        if (gameState.level > 6) {\n          dispatchGame({ type: \"ChangeLevel\", payload: -3 });\n        }\n      } else if (clearedRows > 2) {\n        addScore = POINTS.TRIPLE;\n        if (gameState.level > 6) {\n          dispatchGame({ type: \"ChangeLevel\", payload: -2 });\n        }\n      } else if (clearedRows > 1) {\n        addScore = POINTS.DOUBLE;\n      } else if (clearedRows > 0) {\n        addScore = POINTS.SINGLE;\n        if (gameState.level>7) {\n          dispatchGame({ type: \"ChangeLevel\", payload: -1 });\n        }\n      }\n      dispatchGame({ type: \"ChangeScore\", payload: addScore });\n\n      //change piece\n      dispatchPlayer({ type: \"Reset\" });\n    }\n  }, [isGameOver,playerState.isCollided]);\n\n  const startGameHandler = (event: React.MouseEvent) => {\n    event.preventDefault();\n    closeModalHandler(event);\n    if (gameState.isGameOver) {\n      dispatchGame({ type: \"ResetGame\" });\n      clearStage();\n      dispatchPlayer({ type: \"Reset\" });\n    } else {\n      dispatchGame({ type: \"TogglePause\" });\n    }\n  };\n\n  const movePlayerHandler = (event: React.KeyboardEvent) => {\n    event.preventDefault();\n    if (!playerState.isCollided) {\n      dispatchPlayer({ type: event.code, payload: stageState });\n    }\n  };\n\n  const closeModalHandler = (event: React.MouseEvent) => {\n    event.preventDefault();\n    setOpenModal(false)\n  }\n\n\n  return (\n    <Fragment>\n      {openModal && \n        <GameOverPage \n        score={gameState.score} reStart={startGameHandler} \n        closeModal={closeModalHandler}\n        />\n      }\n      <div\n        className={classes.container}\n        onKeyDown={movePlayerHandler}\n        tabIndex={0}\n      >\n        <div className={classes.grid}>\n          <Stage\n            className={classes.board}\n            stageState={stageState}\n            playerState={playerState}\n            gameState={gameState}\n          />\n          <aside className={classes.aside}>\n            <div>\n              <h2>Tetris</h2>\n              <Display title=\"Score\" value={gameState.score} />\n              <Display title=\"Lines\" value={gameState.lines} />\n              <Display title=\"Level\" value={gameState.level} />\n              <Display title=\"Next\" value={null} />\n              <Next playerState={playerState} gameState={gameState} />\n            </div>\n\n            <button onClick={startGameHandler}>\n              {`${\n                gameState.isGameOver\n                  ? \"Start Game\"\n                  : gameState.isPause\n                  ? \"Continue\"\n                  : \"Pause\"\n              }`}\n            </button>\n          </aside>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Tetris;\n","import Tetris from \"./components/Tetris\";\n\n\nfunction App() {\n  return (\n    <div>\n      <Tetris/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}